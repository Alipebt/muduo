// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protobuf/student.proto

#include "student.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace tutorial
{
  PROTOBUF_CONSTEXPR Student_PhoneNumber::Student_PhoneNumber(
      ::_pbi::ConstantInitialized) : _impl_{
                                         /*decltype(_impl_._has_bits_)*/ {}, /*decltype(_impl_._cached_size_)*/ {}, /*decltype(_impl_.number_)*/ {&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}, /*decltype(_impl_.type_)*/ 0} {}
  struct Student_PhoneNumberDefaultTypeInternal
  {
    PROTOBUF_CONSTEXPR Student_PhoneNumberDefaultTypeInternal()
        : _instance(::_pbi::ConstantInitialized{}) {}
    ~Student_PhoneNumberDefaultTypeInternal() {}
    union
    {
      Student_PhoneNumber _instance;
    };
  };
  PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Student_PhoneNumberDefaultTypeInternal _Student_PhoneNumber_default_instance_;
  PROTOBUF_CONSTEXPR Student::Student(
      ::_pbi::ConstantInitialized) : _impl_{
                                         /*decltype(_impl_._has_bits_)*/ {}, /*decltype(_impl_._cached_size_)*/ {}, /*decltype(_impl_.phone_)*/ {}, /*decltype(_impl_.name_)*/ {&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}, /*decltype(_impl_.email_)*/ {&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}, /*decltype(_impl_.id_)*/ uint64_t{0u}} {}
  struct StudentDefaultTypeInternal
  {
    PROTOBUF_CONSTEXPR StudentDefaultTypeInternal()
        : _instance(::_pbi::ConstantInitialized{}) {}
    ~StudentDefaultTypeInternal() {}
    union
    {
      Student _instance;
    };
  };
  PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StudentDefaultTypeInternal _Student_default_instance_;
} // namespace tutorial
static ::_pb::Metadata file_level_metadata_protobuf_2fstudent_2eproto[2];
static const ::_pb::EnumDescriptor *file_level_enum_descriptors_protobuf_2fstudent_2eproto[1];
static constexpr ::_pb::ServiceDescriptor const **file_level_service_descriptors_protobuf_2fstudent_2eproto = nullptr;

const uint32_t TableStruct_protobuf_2fstudent_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    PROTOBUF_FIELD_OFFSET(::tutorial::Student_PhoneNumber, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::tutorial::Student_PhoneNumber, _internal_metadata_),
    ~0u, // no _extensions_
    ~0u, // no _oneof_case_
    ~0u, // no _weak_field_map_
    ~0u, // no _inlined_string_donated_
    PROTOBUF_FIELD_OFFSET(::tutorial::Student_PhoneNumber, _impl_.number_),
    PROTOBUF_FIELD_OFFSET(::tutorial::Student_PhoneNumber, _impl_.type_),
    ~0u,
    0,
    PROTOBUF_FIELD_OFFSET(::tutorial::Student, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::tutorial::Student, _internal_metadata_),
    ~0u, // no _extensions_
    ~0u, // no _oneof_case_
    ~0u, // no _weak_field_map_
    ~0u, // no _inlined_string_donated_
    PROTOBUF_FIELD_OFFSET(::tutorial::Student, _impl_.id_),
    PROTOBUF_FIELD_OFFSET(::tutorial::Student, _impl_.name_),
    PROTOBUF_FIELD_OFFSET(::tutorial::Student, _impl_.email_),
    PROTOBUF_FIELD_OFFSET(::tutorial::Student, _impl_.phone_),
    ~0u,
    ~0u,
    0,
    ~0u,
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    {0, 8, -1, sizeof(::tutorial::Student_PhoneNumber)},
    {10, 20, -1, sizeof(::tutorial::Student)},
};

static const ::_pb::Message *const file_default_instances[] = {
    &::tutorial::_Student_PhoneNumber_default_instance_._instance,
    &::tutorial::_Student_default_instance_._instance,
};

const char descriptor_table_protodef_protobuf_2fstudent_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
    "\n\026protobuf/student.proto\022\010tutorial\"\352\001\n\007S"
    "tudent\022\n\n\002id\030\001 \001(\004\022\014\n\004name\030\002 \001(\t\022\022\n\005emai"
    "l\030\003 \001(\tH\000\210\001\001\022,\n\005phone\030\004 \003(\0132\035.tutorial.S"
    "tudent.PhoneNumber\032V\n\013PhoneNumber\022\016\n\006num"
    "ber\030\001 \001(\t\022.\n\004type\030\002 \001(\0162\033.tutorial.Stude"
    "nt.PhoneTypeH\000\210\001\001B\007\n\005_type\"!\n\tPhoneType\022"
    "\n\n\006MOBILE\020\000\022\010\n\004HOME\020\001B\010\n\006_emailb\006proto3";
static ::_pbi::once_flag descriptor_table_protobuf_2fstudent_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_protobuf_2fstudent_2eproto = {
    false,
    false,
    279,
    descriptor_table_protodef_protobuf_2fstudent_2eproto,
    "protobuf/student.proto",
    &descriptor_table_protobuf_2fstudent_2eproto_once,
    nullptr,
    0,
    2,
    schemas,
    file_default_instances,
    TableStruct_protobuf_2fstudent_2eproto::offsets,
    file_level_metadata_protobuf_2fstudent_2eproto,
    file_level_enum_descriptors_protobuf_2fstudent_2eproto,
    file_level_service_descriptors_protobuf_2fstudent_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable *descriptor_table_protobuf_2fstudent_2eproto_getter()
{
  return &descriptor_table_protobuf_2fstudent_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_protobuf_2fstudent_2eproto(&descriptor_table_protobuf_2fstudent_2eproto);
namespace tutorial
{
  const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor *Student_PhoneType_descriptor()
  {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_protobuf_2fstudent_2eproto);
    return file_level_enum_descriptors_protobuf_2fstudent_2eproto[0];
  }
  bool Student_PhoneType_IsValid(int value)
  {
    switch (value)
    {
    case 0:
    case 1:
      return true;
    default:
      return false;
    }
  }

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
  constexpr Student_PhoneType Student::MOBILE;
  constexpr Student_PhoneType Student::HOME;
  constexpr Student_PhoneType Student::PhoneType_MIN;
  constexpr Student_PhoneType Student::PhoneType_MAX;
  constexpr int Student::PhoneType_ARRAYSIZE;
#endif // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

  // ===================================================================

  class Student_PhoneNumber::_Internal
  {
  public:
    using HasBits = decltype(std::declval<Student_PhoneNumber>()._impl_._has_bits_);
    static void set_has_type(HasBits *has_bits)
    {
      (*has_bits)[0] |= 1u;
    }
  };

  Student_PhoneNumber::Student_PhoneNumber(::PROTOBUF_NAMESPACE_ID::Arena *arena,
                                           bool is_message_owned)
      : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned)
  {
    SharedCtor(arena, is_message_owned);
    // @@protoc_insertion_point(arena_constructor:tutorial.Student.PhoneNumber)
  }
  Student_PhoneNumber::Student_PhoneNumber(const Student_PhoneNumber &from)
      : ::PROTOBUF_NAMESPACE_ID::Message()
  {
    Student_PhoneNumber *const _this = this;
    (void)_this;
    new (&_impl_) Impl_{
        decltype(_impl_._has_bits_){from._impl_._has_bits_}, /*decltype(_impl_._cached_size_)*/ {}, decltype(_impl_.number_){}, decltype(_impl_.type_){}};

    _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
    _impl_.number_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.number_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
    if (!from._internal_number().empty())
    {
      _this->_impl_.number_.Set(from._internal_number(),
                                _this->GetArenaForAllocation());
    }
    _this->_impl_.type_ = from._impl_.type_;
    // @@protoc_insertion_point(copy_constructor:tutorial.Student.PhoneNumber)
  }

  inline void Student_PhoneNumber::SharedCtor(
      ::_pb::Arena *arena, bool is_message_owned)
  {
    (void)arena;
    (void)is_message_owned;
    new (&_impl_) Impl_{
        decltype(_impl_._has_bits_){}, /*decltype(_impl_._cached_size_)*/ {}, decltype(_impl_.number_){}, decltype(_impl_.type_){0}};
    _impl_.number_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.number_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  }

  Student_PhoneNumber::~Student_PhoneNumber()
  {
    // @@protoc_insertion_point(destructor:tutorial.Student.PhoneNumber)
    if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>())
    {
      (void)arena;
      return;
    }
    SharedDtor();
  }

  inline void Student_PhoneNumber::SharedDtor()
  {
    GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
    _impl_.number_.Destroy();
  }

  void Student_PhoneNumber::SetCachedSize(int size) const
  {
    _impl_._cached_size_.Set(size);
  }

  void Student_PhoneNumber::Clear()
  {
    // @@protoc_insertion_point(message_clear_start:tutorial.Student.PhoneNumber)
    uint32_t cached_has_bits = 0;
    // Prevent compiler warnings about cached_has_bits being unused
    (void)cached_has_bits;

    _impl_.number_.ClearToEmpty();
    _impl_.type_ = 0;
    _impl_._has_bits_.Clear();
    _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  const char *Student_PhoneNumber::_InternalParse(const char *ptr, ::_pbi::ParseContext *ctx)
  {
#define CHK_(x)                     \
  if (PROTOBUF_PREDICT_FALSE(!(x))) \
  goto failure
    _Internal::HasBits has_bits{};
    while (!ctx->Done(&ptr))
    {
      uint32_t tag;
      ptr = ::_pbi::ReadTag(ptr, &tag);
      switch (tag >> 3)
      {
      // string number = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10))
        {
          auto str = _internal_mutable_number();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "tutorial.Student.PhoneNumber.number"));
        }
        else
          goto handle_unusual;
        continue;
      // optional .tutorial.Student.PhoneType type = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16))
        {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_type(static_cast<::tutorial::Student_PhoneType>(val));
        }
        else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
      } // switch
    handle_unusual:
      if ((tag == 0) || ((tag & 7) == 4))
      {
        CHK_(ptr);
        ctx->SetLastTag(tag);
        goto message_done;
      }
      ptr = UnknownFieldParse(
          tag,
          _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
          ptr, ctx);
      CHK_(ptr != nullptr);
    } // while
  message_done:
    _impl_._has_bits_.Or(has_bits);
    return ptr;
  failure:
    ptr = nullptr;
    goto message_done;
#undef CHK_
  }

  uint8_t *Student_PhoneNumber::_InternalSerialize(
      uint8_t *target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream *stream) const
  {
    // @@protoc_insertion_point(serialize_to_array_start:tutorial.Student.PhoneNumber)
    uint32_t cached_has_bits = 0;
    (void)cached_has_bits;

    // string number = 1;
    if (!this->_internal_number().empty())
    {
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          this->_internal_number().data(), static_cast<int>(this->_internal_number().length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "tutorial.Student.PhoneNumber.number");
      target = stream->WriteStringMaybeAliased(
          1, this->_internal_number(), target);
    }

    // optional .tutorial.Student.PhoneType type = 2;
    if (_internal_has_type())
    {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          2, this->_internal_type(), target);
    }

    if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields()))
    {
      target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
          _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
    }
    // @@protoc_insertion_point(serialize_to_array_end:tutorial.Student.PhoneNumber)
    return target;
  }

  size_t Student_PhoneNumber::ByteSizeLong() const
  {
    // @@protoc_insertion_point(message_byte_size_start:tutorial.Student.PhoneNumber)
    size_t total_size = 0;

    uint32_t cached_has_bits = 0;
    // Prevent compiler warnings about cached_has_bits being unused
    (void)cached_has_bits;

    // string number = 1;
    if (!this->_internal_number().empty())
    {
      total_size += 1 +
                    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                        this->_internal_number());
    }

    // optional .tutorial.Student.PhoneType type = 2;
    cached_has_bits = _impl_._has_bits_[0];
    if (cached_has_bits & 0x00000001u)
    {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_type());
    }

    return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
  }

  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Student_PhoneNumber::_class_data_ = {
      ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
      Student_PhoneNumber::MergeImpl};
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData *Student_PhoneNumber::GetClassData() const { return &_class_data_; }

  void Student_PhoneNumber::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message &to_msg, const ::PROTOBUF_NAMESPACE_ID::Message &from_msg)
  {
    auto *const _this = static_cast<Student_PhoneNumber *>(&to_msg);
    auto &from = static_cast<const Student_PhoneNumber &>(from_msg);
    // @@protoc_insertion_point(class_specific_merge_from_start:tutorial.Student.PhoneNumber)
    GOOGLE_DCHECK_NE(&from, _this);
    uint32_t cached_has_bits = 0;
    (void)cached_has_bits;

    if (!from._internal_number().empty())
    {
      _this->_internal_set_number(from._internal_number());
    }
    if (from._internal_has_type())
    {
      _this->_internal_set_type(from._internal_type());
    }
    _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  }

  void Student_PhoneNumber::CopyFrom(const Student_PhoneNumber &from)
  {
    // @@protoc_insertion_point(class_specific_copy_from_start:tutorial.Student.PhoneNumber)
    if (&from == this)
      return;
    Clear();
    MergeFrom(from);
  }

  bool Student_PhoneNumber::IsInitialized() const
  {
    return true;
  }

  void Student_PhoneNumber::InternalSwap(Student_PhoneNumber *other)
  {
    using std::swap;
    auto *lhs_arena = GetArenaForAllocation();
    auto *rhs_arena = other->GetArenaForAllocation();
    _internal_metadata_.InternalSwap(&other->_internal_metadata_);
    swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
        &_impl_.number_, lhs_arena,
        &other->_impl_.number_, rhs_arena);
    swap(_impl_.type_, other->_impl_.type_);
  }

  ::PROTOBUF_NAMESPACE_ID::Metadata Student_PhoneNumber::GetMetadata() const
  {
    return ::_pbi::AssignDescriptors(
        &descriptor_table_protobuf_2fstudent_2eproto_getter, &descriptor_table_protobuf_2fstudent_2eproto_once,
        file_level_metadata_protobuf_2fstudent_2eproto[0]);
  }

  // ===================================================================

  class Student::_Internal
  {
  public:
    using HasBits = decltype(std::declval<Student>()._impl_._has_bits_);
    static void set_has_email(HasBits *has_bits)
    {
      (*has_bits)[0] |= 1u;
    }
  };

  Student::Student(::PROTOBUF_NAMESPACE_ID::Arena *arena,
                   bool is_message_owned)
      : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned)
  {
    SharedCtor(arena, is_message_owned);
    // @@protoc_insertion_point(arena_constructor:tutorial.Student)
  }
  Student::Student(const Student &from)
      : ::PROTOBUF_NAMESPACE_ID::Message()
  {
    Student *const _this = this;
    (void)_this;
    new (&_impl_) Impl_{
        decltype(_impl_._has_bits_){from._impl_._has_bits_}, /*decltype(_impl_._cached_size_)*/ {}, decltype(_impl_.phone_){from._impl_.phone_}, decltype(_impl_.name_){}, decltype(_impl_.email_){}, decltype(_impl_.id_){}};

    _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
    _impl_.name_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
    if (!from._internal_name().empty())
    {
      _this->_impl_.name_.Set(from._internal_name(),
                              _this->GetArenaForAllocation());
    }
    _impl_.email_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.email_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
    if (from._internal_has_email())
    {
      _this->_impl_.email_.Set(from._internal_email(),
                               _this->GetArenaForAllocation());
    }
    _this->_impl_.id_ = from._impl_.id_;
    // @@protoc_insertion_point(copy_constructor:tutorial.Student)
  }

  inline void Student::SharedCtor(
      ::_pb::Arena *arena, bool is_message_owned)
  {
    (void)arena;
    (void)is_message_owned;
    new (&_impl_) Impl_{
        decltype(_impl_._has_bits_){}, /*decltype(_impl_._cached_size_)*/ {}, decltype(_impl_.phone_){arena}, decltype(_impl_.name_){}, decltype(_impl_.email_){}, decltype(_impl_.id_){uint64_t{0u}}};
    _impl_.name_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.email_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.email_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  }

  Student::~Student()
  {
    // @@protoc_insertion_point(destructor:tutorial.Student)
    if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>())
    {
      (void)arena;
      return;
    }
    SharedDtor();
  }

  inline void Student::SharedDtor()
  {
    GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
    _impl_.phone_.~RepeatedPtrField();
    _impl_.name_.Destroy();
    _impl_.email_.Destroy();
  }

  void Student::SetCachedSize(int size) const
  {
    _impl_._cached_size_.Set(size);
  }

  void Student::Clear()
  {
    // @@protoc_insertion_point(message_clear_start:tutorial.Student)
    uint32_t cached_has_bits = 0;
    // Prevent compiler warnings about cached_has_bits being unused
    (void)cached_has_bits;

    _impl_.phone_.Clear();
    _impl_.name_.ClearToEmpty();
    cached_has_bits = _impl_._has_bits_[0];
    if (cached_has_bits & 0x00000001u)
    {
      _impl_.email_.ClearNonDefaultToEmpty();
    }
    _impl_.id_ = uint64_t{0u};
    _impl_._has_bits_.Clear();
    _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  const char *Student::_InternalParse(const char *ptr, ::_pbi::ParseContext *ctx)
  {
#define CHK_(x)                     \
  if (PROTOBUF_PREDICT_FALSE(!(x))) \
  goto failure
    _Internal::HasBits has_bits{};
    while (!ctx->Done(&ptr))
    {
      uint32_t tag;
      ptr = ::_pbi::ReadTag(ptr, &tag);
      switch (tag >> 3)
      {
      // uint64 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8))
        {
          _impl_.id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        }
        else
          goto handle_unusual;
        continue;
      // string name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18))
        {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "tutorial.Student.name"));
        }
        else
          goto handle_unusual;
        continue;
      // optional string email = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26))
        {
          auto str = _internal_mutable_email();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "tutorial.Student.email"));
        }
        else
          goto handle_unusual;
        continue;
      // repeated .tutorial.Student.PhoneNumber phone = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34))
        {
          ptr -= 1;
          do
          {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_phone(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr))
              break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        }
        else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
      } // switch
    handle_unusual:
      if ((tag == 0) || ((tag & 7) == 4))
      {
        CHK_(ptr);
        ctx->SetLastTag(tag);
        goto message_done;
      }
      ptr = UnknownFieldParse(
          tag,
          _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
          ptr, ctx);
      CHK_(ptr != nullptr);
    } // while
  message_done:
    _impl_._has_bits_.Or(has_bits);
    return ptr;
  failure:
    ptr = nullptr;
    goto message_done;
#undef CHK_
  }

  uint8_t *Student::_InternalSerialize(
      uint8_t *target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream *stream) const
  {
    // @@protoc_insertion_point(serialize_to_array_start:tutorial.Student)
    uint32_t cached_has_bits = 0;
    (void)cached_has_bits;

    // uint64 id = 1;
    if (this->_internal_id() != 0)
    {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt64ToArray(1, this->_internal_id(), target);
    }

    // string name = 2;
    if (!this->_internal_name().empty())
    {
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "tutorial.Student.name");
      target = stream->WriteStringMaybeAliased(
          2, this->_internal_name(), target);
    }

    // optional string email = 3;
    if (_internal_has_email())
    {
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          this->_internal_email().data(), static_cast<int>(this->_internal_email().length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "tutorial.Student.email");
      target = stream->WriteStringMaybeAliased(
          3, this->_internal_email(), target);
    }

    // repeated .tutorial.Student.PhoneNumber phone = 4;
    for (unsigned i = 0,
                  n = static_cast<unsigned>(this->_internal_phone_size());
         i < n; i++)
    {
      const auto &repfield = this->_internal_phone(i);
      target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
          InternalWriteMessage(4, repfield, repfield.GetCachedSize(), target, stream);
    }

    if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields()))
    {
      target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
          _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
    }
    // @@protoc_insertion_point(serialize_to_array_end:tutorial.Student)
    return target;
  }

  size_t Student::ByteSizeLong() const
  {
    // @@protoc_insertion_point(message_byte_size_start:tutorial.Student)
    size_t total_size = 0;

    uint32_t cached_has_bits = 0;
    // Prevent compiler warnings about cached_has_bits being unused
    (void)cached_has_bits;

    // repeated .tutorial.Student.PhoneNumber phone = 4;
    total_size += 1UL * this->_internal_phone_size();
    for (const auto &msg : this->_impl_.phone_)
    {
      total_size +=
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
    }

    // string name = 2;
    if (!this->_internal_name().empty())
    {
      total_size += 1 +
                    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                        this->_internal_name());
    }

    // optional string email = 3;
    cached_has_bits = _impl_._has_bits_[0];
    if (cached_has_bits & 0x00000001u)
    {
      total_size += 1 +
                    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                        this->_internal_email());
    }

    // uint64 id = 1;
    if (this->_internal_id() != 0)
    {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_id());
    }

    return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
  }

  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Student::_class_data_ = {
      ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
      Student::MergeImpl};
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData *Student::GetClassData() const { return &_class_data_; }

  void Student::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message &to_msg, const ::PROTOBUF_NAMESPACE_ID::Message &from_msg)
  {
    auto *const _this = static_cast<Student *>(&to_msg);
    auto &from = static_cast<const Student &>(from_msg);
    // @@protoc_insertion_point(class_specific_merge_from_start:tutorial.Student)
    GOOGLE_DCHECK_NE(&from, _this);
    uint32_t cached_has_bits = 0;
    (void)cached_has_bits;

    _this->_impl_.phone_.MergeFrom(from._impl_.phone_);
    if (!from._internal_name().empty())
    {
      _this->_internal_set_name(from._internal_name());
    }
    if (from._internal_has_email())
    {
      _this->_internal_set_email(from._internal_email());
    }
    if (from._internal_id() != 0)
    {
      _this->_internal_set_id(from._internal_id());
    }
    _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  }

  void Student::CopyFrom(const Student &from)
  {
    // @@protoc_insertion_point(class_specific_copy_from_start:tutorial.Student)
    if (&from == this)
      return;
    Clear();
    MergeFrom(from);
  }

  bool Student::IsInitialized() const
  {
    return true;
  }

  void Student::InternalSwap(Student *other)
  {
    using std::swap;
    auto *lhs_arena = GetArenaForAllocation();
    auto *rhs_arena = other->GetArenaForAllocation();
    _internal_metadata_.InternalSwap(&other->_internal_metadata_);
    swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
    _impl_.phone_.InternalSwap(&other->_impl_.phone_);
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
        &_impl_.name_, lhs_arena,
        &other->_impl_.name_, rhs_arena);
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
        &_impl_.email_, lhs_arena,
        &other->_impl_.email_, rhs_arena);
    swap(_impl_.id_, other->_impl_.id_);
  }

  ::PROTOBUF_NAMESPACE_ID::Metadata Student::GetMetadata() const
  {
    return ::_pbi::AssignDescriptors(
        &descriptor_table_protobuf_2fstudent_2eproto_getter, &descriptor_table_protobuf_2fstudent_2eproto_once,
        file_level_metadata_protobuf_2fstudent_2eproto[1]);
  }

  // @@protoc_insertion_point(namespace_scope)
} // namespace tutorial
PROTOBUF_NAMESPACE_OPEN
template <>
PROTOBUF_NOINLINE ::tutorial::Student_PhoneNumber *
Arena::CreateMaybeMessage<::tutorial::Student_PhoneNumber>(Arena *arena)
{
  return Arena::CreateMessageInternal<::tutorial::Student_PhoneNumber>(arena);
}
template <>
PROTOBUF_NOINLINE ::tutorial::Student *
Arena::CreateMaybeMessage<::tutorial::Student>(Arena *arena)
{
  return Arena::CreateMessageInternal<::tutorial::Student>(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
